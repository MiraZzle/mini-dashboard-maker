@page "/dashboards"
@rendermode InteractiveServer

@using System.ComponentModel.DataAnnotations
@using source.Components.Elements
@using source.Models.DataSources
@using source.Services.DataSources
@using source.Services.Dashboards
@using source.Models.Dashboards

@inject DataSourceService SourceService
@inject DashboardService DashboardService

<h3>Dashboards</h3>

<button class="btn btn-primary mb-3" @onclick="ShowCreateDashboardModal">
    <i class="fas fa-plus-circle"></i> Create New Dashboard
</button>

<Modal @ref="modalRef">
    <EditForm Model="dashboardCreationModel" OnValidSubmit="HandleValidSubmit" novalidate>
        <DataAnnotationsValidator />

        <div class="modal-header">
            <h5 class="modal-title">Create Dashboard</h5>
        </div>

        <div class="modal-body">
            <ValidationSummary class="mb-3" />

            <div class="mb-3">
                <label class="form-label" for="dashboardName">Name:</label>
                <InputText id="dashboardName" class="form-control" @bind-Value="dashboardCreationModel.Name" />
                <ValidationMessage For="@(() => dashboardCreationModel.Name)" />
            </div>

            <div class="mb-3">
                <label class="form-label" for="dashboardDescription">Description (Optional):</label>
                <InputTextArea id="dashboardDescription" class="form-control" @bind-Value="dashboardCreationModel.Description" />
            </div>

            <hr />
            
            <h4>Available Data Sources</h4>
            <div class="row mb-3">
                <div class="col-md-6">
                    <label class="form-label" for="filterType">Filter by type:</label>
                    <InputSelect id="filterType" class="form-select form-select-sm" @bind-Value="filterTypeString">
                        <option value="">All Types</option>
                        @foreach (var type in Enum.GetValues<DataSourceType>())
                        {
                            <option value="@type.ToString()">@type.ToString()</option>
                        }
                    </InputSelect>
                </div>
                <div class="col-md-6">
                    <label class="form-label" for="filterName">Search by name:</label>
                    <InputText id="filterName" class="form-control form-control-sm" placeholder="Type name..." @bind-Value="filterName" />
                </div>
            </div>

            <div class="list-group mb-3" style="max-height: 200px; overflow-y: auto;">
                @if (FilteredSources.Any())
                {
                    @foreach (var availableDs in FilteredSources)
                    {
                        var isAlreadyAdded = dashboardCreationModel.DataSourceEntries.Any(entry => entry.SelectedDataSourceId == availableDs.Id.ToString());
                        var canAddMore = dashboardCreationModel.DataSourceEntries.Count < DashboardDefinition.MaxPairs;

                        <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                            <span>@availableDs.SourceName <small class="text-muted">(@availableDs.SourceType)</small></span>
                            <button type="button" class="btn btn-sm btn-success py-0 px-1"
                                    @onclick="() => AddSpecificDataSourceEntry(availableDs)"
                                    disabled="@(!canAddMore || isAlreadyAdded)"
                                    title="@(isAlreadyAdded ? "Already added" : (!canAddMore ? "Max sources reached" : "Add this source"))">
                                <i class="fas fa-plus"></i> Add
                            </button>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted p-2">No data sources match your filter, or none are available.</p>
                }
            </div>

            <hr />

            <h4>
                Configure Selected Data Sources 
                <small class="text-muted">(@dashboardCreationModel.DataSourceEntries.Count / @DashboardDefinition.MaxPairs Selected)</small>
            </h4>
            @if (dashboardCreationModel.DataSourceEntries.Any())
            {
                @foreach (var dataSourceEntry in dashboardCreationModel.DataSourceEntries)
                {
                    <div class="border p-3 mb-3 rounded position-relative shadow-sm" @key="dataSourceEntry.UniqueKey">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h6 class="mb-0">@dataSourceEntry.SelectedDataSource?.SourceName <small class="text-muted">(@dataSourceEntry.SelectedDataSource?.SourceType)</small></h6>
                            <button type="button" class="btn btn-sm btn-outline-danger" title="Remove this data source" @onclick="() => RemoveDataSourceEntry(dataSourceEntry)">
                                <i class="fas fa-trash-alt"></i> Remove
                            </button>
                        </div>

                        @if (dataSourceEntry.SelectedDataSource != null)
                        {
                            <div class="mb-2">
                                <label class="form-label">Select Visualization:</label>
                                <InputSelect class="form-select" @bind-Value="dataSourceEntry.SelectedVisualizationType">
                                    <option value="">-- Select visualization --</option>
                                    @foreach (var vis in VisualizationMapping.GetSupported(dataSourceEntry.SelectedDataSource.SourceType))
                                    {
                                        <option value="@vis">@vis.ToString()</option>
                                    }
                                </InputSelect>
                                <ValidationMessage For="@(() => dataSourceEntry.SelectedVisualizationType)" />
                            </div>
                        }
                        else
                        {
                             <p class="text-danger small">Error: Data source information is missing for this entry.</p>
                        }
                    </div>
                }
            }
            else
            {
                <p class="text-muted">No data sources have been added to this dashboard yet. Select from the list above.</p>
            }
            
            @if (customErrorMessage != null)
            {
                <div class="alert alert-danger mt-3" role="alert">
                    @customErrorMessage
                </div>
            }
        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" @onclick="CancelCreation">Cancel</button>
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i> Save Dashboard
            </button>
        </div>
    </EditForm>
</Modal>

